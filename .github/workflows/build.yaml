env:
  WORKING_DIRECTORY: angular

jobs:
  build:
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    name: build_angular
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: angular-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_lint
        run: npm run lint
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name == 'pull_request'
        name: npm_build_dev
        run: npm run build -- --configuration=DEV
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name != 'pull_request'
        name: npm_build
        run: npm run build -- --configuration=PROD
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: drop_upload
        uses: actions/upload-artifact@v1.0.0
        with:
          name: drop
          path: ${{ env.WORKING_DIRECTORY }}/dist/rvtr-app-campsite

  test:
    name: test_angular
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: angular-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_update
        run: npm run update
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_test
        run: npm run test
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_e2e
        run: npm run e2e
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: lcov_upload
        uses: actions/upload-artifact@v1.0.0
        with:
          name: code_coverage
          path: ${{ env.WORKING_DIRECTORY }}/code_coverage
      - name: report_upload
        uses: actions/upload-artifact@v1.0.0
        with:
          name: test_coverage
          path: ${{ env.WORKING_DIRECTORY }}/test_coverage

  analyze:
    name: analyze_angular
    needs: [build, test]
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: git_fetch
        run: git fetch --unshallow
      - name: lcov_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: code_coverage
          path: ${{ env.WORKING_DIRECTORY }}/code_coverage
      - name: report_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: test_coverage
          path: ${{ env.WORKING_DIRECTORY }}/test_coverage
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: angular-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name == 'pull_request'
        name: npm_scan_pull_request
        run: npm run scan
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
        name: npm_scan
        run: npm run scan
        working-directory: ${{ env.WORKING_DIRECTORY }}

  deploy:
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_BASE_MESSAGE: $(date --iso-8601='seconds')\ ::\ ${GITHUB_WORKFLOW}\ ::\ ${GITHUB_RUN_NUMBER}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    name: deploy_angular
    needs: analyze
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: drop_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: drop
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: angular-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name == 'pull_request'
        name: netlify_deploy_preview
        run: npx netlify deploy --dir drop --message ${{ env.NETLIFY_BASE_MESSAGE }}\ ::\ ${GITHUB_HEAD_REF##*/}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name != 'pull_request'
        name: netlify_deploy
        run: npx netlify deploy --dir drop --prod --message ${{ env.NETLIFY_BASE_MESSAGE }}\ ::\ ${GITHUB_REF##*/}
        working-directory: ${{ env.WORKING_DIRECTORY }}

  monitor:
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_RELEASE_VERSION: $(npx -c 'echo rvtr-app-campsite@${npm_package_version}')
    name: monitor_angular
    needs: deploy
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: angular-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name == 'pull_request'
        name: sentry_deploy_dev
        run: npx sentry-cli releases deploys ${{ env.SENTRY_RELEASE_VERSION }} new --env DEV
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name != 'pull_request'
        name: sentry_deploy
        run: npx sentry-cli releases deploys ${{ env.SENTRY_RELEASE_VERSION }} new --env PROD
        working-directory: ${{ env.WORKING_DIRECTORY }}

name: build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
