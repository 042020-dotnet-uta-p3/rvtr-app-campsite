import { LodgingService } from './../../../services/lodging/lodging.service';
import { Component, OnInit } from '@angular/core';
import { Lodging } from 'src/app/data/lodging.model';
import { HttpParams } from '@angular/common/http';
import { LodgingQueryParams } from '../@types/lodging-query-params';
import { FormGroup } from '@angular/forms';
import { LodgingSearchFormField } from '../lodging-search-form/lodging-search-form-field';
import Limit = LodgingQueryParams.Limit;

@Component({
  selector: 'uic-lodging',
  templateUrl: './lodging.component.html',
})
export class LodgingComponent implements OnInit {

  public lodgings: Lodging[];

  // Amount of lodgings to load at one time.
  private limit = 5;
  // Current offset for lodge pagination.
  private offset = 0;

  private searchParams: HttpParams = new HttpParams();

  constructor(private lodgingService: LodgingService) { }

  ngOnInit(): void {
    this.loadLodgings();
  }

  loadLodgings() {
    this.setSearchLimit();

    this.searchParams = this.searchParams.set(LodgingQueryParams.IncludeImages, false.toString());

    this.lodgingService.get(undefined, this.searchParams).subscribe(response => {
      this.lodgings = response;
    });
  }

  /**
   * Sets the limit for number of results that should be returned by the server.
   */
  setSearchLimit() {
    this.searchParams = this.searchParams.set(Limit, this.limit.toString());
  }

  nextPage() {}

  previousPage() {}

  /**
   * Fired when the search component is submitted.
   * @param queryParams Parameters generated by the search component.
   */
  onSearchSubmit(queryParams: HttpParams) {
    this.searchParams = queryParams;
    this.loadLodgings();
  }
}

